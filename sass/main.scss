/* Setting padding and margin zero to reset Browser's settings  */

$color-primary:#55C57A;
$color-primary-light:#7ED56F;
$color-primary-dark:#28B485;
$color-grey-dark:#777; 
$color-white:#FFF;
$color-black: #000;

*,
*::after,
*::after{
    margin : 0;
    padding: 0;
    /* This will make all elements of body to inherit the box-sizing property */
    /* It's a slightly better practice to put it in body tag */
    /* Doesn't make much difference though */
    box-sizing: inherit;
}
html{
    /* Settting font-size 62.5%(10px) to use rem further easily */
    /* Now, 1rem = 10px so calculations become easier like 150px = 15rem */
    font-size: 62.5%;
}
body{
    font-family: "Lato",sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: $color-grey-dark;
    padding:3rem;
    box-sizing: border-box;
}
.header{
    height: 95vh;
    background-size: cover;
    /* Our linear gradient will be on top of the image and because of 0.8 opacity, image will be visible */
    background-image: linear-gradient(to right bottom,rgba($color-primary-light,0.8),rgba($color-primary-dark,0.8)) ,url("../img/hero.jpg");
    /* Background remain "sticked" to top even as we resize */
    background-position: top;
    /* Clipping path to achieve the shape */
    clip-path: polygon(0 0,100% 0, 100% 75vh, 0 100%);
    /* For Styling elements inside of Header, so that left right is referenced by this element */
    position: relative;

    /* & = .header */
    &__logo-box{ 
        position: absolute;
        left: 4rem;
        top: 4rem;
    }
    &__logo{
        height: 3.5rem;
    }
    &__text-box{
        position: absolute;
        top: 38%;
        left: 50%;
        transform: translate(-50%,-50%);
        text-align: center;
    }
}

.heading-primary{
    color:$color-white;
    text-transform: uppercase;
    &--main{
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation : moveInLeft 1s ease-out;
        
    }
    &--sub{
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 17.5px;
        margin-bottom: 6rem;
        animation: moveInRight 1s ease-out;
    }
}

/* Animation for text in header */
@keyframes moveInLeft{
    0%{
        opacity: 0;
        transform: translateX(-10rem);
    }
    80%{
        opacity: 0.8;
        transform: translateX(1rem);
    }
    100%{
        opacity: 1;
        transform: translateX(0);
    }
}
@keyframes moveInRight{
    0%{
        opacity: 0;
        transform: translateX(10rem);
    }
    80%{
        opacity: 0.8;
        transform: translateX(-1rem);
    }
    100%{
        opacity: 1;
        transform: translateX(0);
    }
}

.btn{
    &:link,&:visited{
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 20rem;
        transition: all 0.2s;
        /* Set to relative for pseudo element to work */
        position: relative;
    }
    &--animated{
        animation: moveInBottom 2s ease-out .75s;
        animation-fill-mode: backwards;
    }
    &:hover{
        transform:translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black,.2) ;
    }
    &:active{
        transform:translateY(1px); 
    }
    &--white{
        background-color:#fff;
        color: #777;
        
    }
    &::after{
        content: "";
        width:100%;
        height: 100%;
        display: inline-block;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition:all 0.4s;
    }
    &-white::after{
        background-color: #FFF;
    }
    &:hover::after{
        transform:scaleX(1.4) scaleY(1.6);
        opacity: 0; 
    }
    
}



@keyframes moveInBottom{
    0%{
        opacity: 0;
        transform: translateY(3rem);
    }
    100%{
        opacity: 1;
        transform: translateY(0);
    }
}