/* Setting padding and margin zero to reset Browser's settings  */
*,
*::after,
*::after {
  margin: 0;
  padding: 0;
  /* This will make all elements of body to inherit the box-sizing property */
  /* It's a slightly better practice to put it in body tag */
  /* Doesn't make much difference though */
  box-sizing: inherit; }

html {
  /* Settting font-size 62.5%(10px) to use rem further easily */
  /* Now, 1rem = 10px so calculations become easier like 150px = 15rem */
  font-size: 62.5%; }

/* Animation for text in header */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    opacity: 0.8;
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    opacity: 0.8;
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  font-family: "Lato",sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  color: #FFF;
  text-transform: uppercase; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 17.5px;
    margin-bottom: 6rem;
    animation: moveInRight 1s ease-out; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 20rem;
  transition: all 0.2s;
  /* Set to relative for pseudo element to work */
  position: relative; }

.btn--animated {
  animation: moveInBottom 2s ease-out .75s;
  animation-fill-mode: backwards; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(1px); }

.btn--white {
  background-color: #FFF;
  color: #777; }
  .btn--white::after {
    background-color: #FFF; }

.btn::after {
  content: "";
  width: 100%;
  height: 100%;
  display: inline-block;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.header {
  height: 95vh;
  background-size: cover;
  /* Our linear gradient will be on top of the image and because of 0.8 opacity, image will be visible */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  /* Background remain "sticked" to top even as we resize */
  background-position: top;
  /* Clipping path to achieve the shape */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* For Styling elements inside of Header, so that left right is referenced by this element */
  position: relative; }
  .header__logo-box {
    position: absolute;
    left: 4rem;
    top: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 38%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
